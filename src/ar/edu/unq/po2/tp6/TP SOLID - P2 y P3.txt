2) Detecte violaciones de principios SOLID.
* Violación del principio n°4, Interface segregation principle (principio de segregación de interfaces).
* Violación del principio n°5, Dependency inversion principle (principio de inversion de dependencias).
* Violación del principio n°2, Open Closed 


3) Indique las soluciones que deben llevarse a cabo.
* Primero habría que descomponer la interfaz general IServidor y crear interfaces mas pequeñas porque la clase
ServidorPop que la implementa, no está utilizando algunos mensajes como tazaDetransferencia, resetear y 
realizarBackUp. Entonces, crear una interfaz que contenga sólo los mensajes recibirNuevos, conectar y enviar (así la
clase ServidorPop solo va a implementar esa interfaz con solo esos 3 mensajes).

*Viola el 5to principio porque la clase de alto nivel ClienteEmail tiene dependencia con la clase ServidorPop.
Esto no permite que si el día de mañana si cambia de servidor, hay que modificar el código dentro de ClienteEmail,
por lo que habría que pasarle en vez de ServidorPop, una interfaz Servidor tal vez, que sea la que ServidorPop
implemente de dicha interfaz.

*Otra modificacion que haría es que en el método de enviarCorreo , le pasaría por parámetro directamente un 
Correo, y en el test lo instanciaría ya como new Correo(String, String, String) con su asunto, destinatario y
cuerpo.

*Como viola el 2do principio de Open Closed al tener las variables no clasificadas como privadas, lo que
hice fue prácticamente hacer eso, poner a sus variables como privadas que es lo que correspondería.